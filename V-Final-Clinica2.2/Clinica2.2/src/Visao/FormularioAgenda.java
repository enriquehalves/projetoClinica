/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Visao;

import Modelo.ModeloAgendaConsulta;
import Modelo.ModeloTabela;
import ModeloConexao.ConexaoBD;
import ModeloDAO.DAOAgenda;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Henrique
 */
public class FormularioAgenda extends javax.swing.JFrame {
     String dta;
    String hra;
    ConexaoBD conexao = new ConexaoBD();
    ModeloAgendaConsulta modconsulta = new ModeloAgendaConsulta();
    DAOAgenda agenda = new DAOAgenda();
    /** Creates new form FormularioAgenda */
    public FormularioAgenda() {
        initComponents();
        PreencherMedicos();
        new Tempo().start();
    }
    
        public class Tempo extends Thread{
        public void run(){
        while(true){
              Date d = new Date();
              SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
              String dt = sdf.format(d);
               Date h = new Date();
            SimpleDateFormat hr = new SimpleDateFormat("HH:mm:ss");
             String hrs=hr.format(h);
             try{
                 Thread.sleep(1000);
                 data.setText(dt);
                 hora.setText(hrs);
             }catch(Exception e){
                 
             }
            
        }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        paciente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelapaciente = new javax.swing.JTable();
        btn_pesquisaagenda = new javax.swing.JButton();
        medicos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        motivo = new javax.swing.JTextArea();
        cancelaratendimento = new javax.swing.JButton();
        finalizaragendamento = new javax.swing.JButton();
        status = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dataconsulta = new com.toedter.calendar.JDateChooser();
        data = new javax.swing.JLabel();
        hora = new javax.swing.JLabel();
        formathora = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agendamento");
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel1.setText("Paciente");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(70, 10, 60, 14);

        jLabel2.setText("MÃ©dico");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(80, 160, 50, 14);

        jLabel3.setText("Motivo");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(80, 230, 60, 14);
        jPanel1.add(paciente);
        paciente.setBounds(130, 10, 340, 30);

        tabelapaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelapaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelapacienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelapaciente);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(130, 50, 452, 100);

        btn_pesquisaagenda.setText("Pesquisar");
        btn_pesquisaagenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pesquisaagendaActionPerformed(evt);
            }
        });
        jPanel1.add(btn_pesquisaagenda);
        btn_pesquisaagenda.setBounds(480, 10, 100, 30);

        medicos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        medicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicosMouseClicked(evt);
            }
        });
        medicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicosActionPerformed(evt);
            }
        });
        jPanel1.add(medicos);
        medicos.setBounds(130, 160, 190, 30);

        jLabel4.setText("Data");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(390, 160, 60, 14);

        motivo.setColumns(20);
        motivo.setRows(5);
        jScrollPane2.setViewportView(motivo);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(130, 236, 450, 90);

        cancelaratendimento.setText("Cancelar agendamento");
        cancelaratendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelaratendimentoActionPerformed(evt);
            }
        });
        jPanel1.add(cancelaratendimento);
        cancelaratendimento.setBounds(410, 330, 170, 23);

        finalizaragendamento.setText("Finalizar agendamento");
        finalizaragendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizaragendamentoActionPerformed(evt);
            }
        });
        jPanel1.add(finalizaragendamento);
        finalizaragendamento.setBounds(130, 330, 170, 23);
        jPanel1.add(status);
        status.setBounds(600, 30, 70, 30);

        jLabel6.setText("Status");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(600, 10, 50, 14);
        jPanel1.add(dataconsulta);
        dataconsulta.setBounds(430, 160, 150, 30);
        jPanel1.add(data);
        data.setBounds(610, 220, 70, 20);
        jPanel1.add(hora);
        hora.setBounds(610, 260, 70, 20);

        try {
            formathora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(formathora);
        formathora.setBounds(430, 200, 130, 30);

        jLabel7.setText("Hora");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(390, 200, 40, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 30, 690, 370);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Agendamento");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(300, 0, 190, 20);

        setSize(new java.awt.Dimension(728, 455));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelaratendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelaratendimentoActionPerformed
        paciente.setText("");
        dataconsulta.setCalendar(null);
        motivo.setText(""); 
        dispose();
     
    }//GEN-LAST:event_cancelaratendimentoActionPerformed

    private void btn_pesquisaagendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pesquisaagendaActionPerformed
        preencherTabela("select codigo,nome,telefone,cpf,rua,bairronome from pacientes inner join bairro on pacientes.pacbairrocodigo = bairro.bairrocodigo where nome like'%"+paciente.getText()+"%'");
    }//GEN-LAST:event_btn_pesquisaagendaActionPerformed

    private void finalizaragendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizaragendamentoActionPerformed
      
        
        
        
        
        
        
        
        
        
        
         try {
             
             
            
            String c = formathora.getText();
            String x =c.replace(":", "");
            int d = Integer.parseInt(x);
            
            
            Date a = dataconsulta.getDate();
            DateFormat formata = new SimpleDateFormat("dd/MM/yyyy");
            Date b = formata.parse(data.getText());
            
            if(a.compareTo(b)>=b.compareTo(a)&& d>=800 && d<=1800){
                
                    modconsulta.setNomepaciente(paciente.getText());
                    modconsulta.setNomemedico(String.valueOf(medicos.getSelectedItem()));
                    modconsulta.setData(dataconsulta.getDate());
                    modconsulta.setMotivo(motivo.getText());
                    modconsulta.setStatus("em aberto");
                    agenda.salvar(modconsulta);
            
            paciente.setText("");
            dataconsulta.setCalendar(null);
            motivo.setText("");
            formathora.setText("");
            }else{
                JOptionPane.showMessageDialog(null, "escolha uma data valida");
            }
        } catch (ParseException ex) {
            Logger.getLogger(FormularioAgenda.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        /* modconsulta.setNomepaciente(paciente.getText());
        modconsulta.setNomemedico(String.valueOf(medicos.getSelectedItem()));
        modconsulta.setData(dataconsulta.getDate());
        modconsulta.setMotivo(motivo.getText());
        modconsulta.setStatus("em aberto");
        agenda.salvar(modconsulta);
        
        paciente.setText("");
        dataconsulta.setCalendar(null);
        motivo.setText("");*/
        
 
       
    }//GEN-LAST:event_finalizaragendamentoActionPerformed

    private void tabelapacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelapacienteMouseClicked
      
         String nome_pac = ""+tabelapaciente.getValueAt(tabelapaciente.getSelectedRow(),1);
         conexao.Conexao();
      //executa select com o nome selecionado na tabela
      conexao.ExecutaSql("select *from pacientes inner join bairro on pacientes.pacbairrocodigo = bairro.bairrocodigo where nome='"+nome_pac+"'");
      try{
          //filtra o primeiro resultado
      conexao.rs.first();
       paciente.setText(conexao.rs.getString("nome"));
        }catch(Exception e){
          //mostra mensafem se algo nao funcionou
          JOptionPane.showMessageDialog(null, "erro no evento mouseclicked");
      }
      conexao.Desconecta();
      
  
    }//GEN-LAST:event_tabelapacienteMouseClicked

    private void medicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicosActionPerformed
             
    }//GEN-LAST:event_medicosActionPerformed

    private void medicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicosMouseClicked
        conexao.Conexao();
        try {
             conexao.ExecutaSql("select *from medicos order by nomemed");
             conexao.rs.first();
             medicos.removeAllItems();
             do{
                 medicos.addItem(conexao.rs.getString("nomemed"));
             }while(conexao.rs.next());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
         conexao.Desconecta();
    }//GEN-LAST:event_medicosMouseClicked

       public void PreencherMedicos(){
     
        conexao.Conexao();
        try {
             conexao.ExecutaSql("select *from medicos order by nomemed");
             conexao.rs.first();
             medicos.removeAllItems();
             do{
                 medicos.addItem(conexao.rs.getString("nomemed"));
             }while(conexao.rs.next());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
         conexao.Desconecta();
    }
    
     public void preencherTabela(String Sql){
        
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID","Paciente","Telefone","CPF","Rua","Bairro"};//titulos das coluna da tabela
        //abre conexao
        conexao.Conexao();
        //executa busca no banco
        conexao.ExecutaSql(Sql);
        
        try{
            //filtra primeiro resultado
            conexao.rs.first();
            do{
                //insere no arraylist o que esta no atributo codigo nome ... no banco de dados
                dados.add(new Object[]{conexao.rs.getInt("codigo"),conexao.rs.getString("nome"),conexao.rs.getString("telefone"),conexao.rs.getString("cpf"),conexao.rs.getString("rua"),conexao.rs.getString("bairronome")});
               //enquanto tiver registro na tabela do banco
            }while(conexao.rs.next());
        }catch(Exception e){
            //se algo deu errdo
            JOptionPane.showMessageDialog(null, "busque novamente "+e);
        }
        //instancia tablea com os dados e coluna como parametro
        ModeloTabela modelotabela = new ModeloTabela(dados, colunas);
        //seta o modelo tabela
        tabelapaciente.setModel(modelotabela);
        
        //dimensiona tamanho da coluna 0
        tabelapaciente.getColumnModel().getColumn(0).setPreferredWidth(80);
        tabelapaciente.getColumnModel().getColumn(0).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(1).setPreferredWidth(150);  //dimensiona tamanho da coluna 1
        tabelapaciente.getColumnModel().getColumn(1).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(2).setPreferredWidth(90);  //dimensiona tamanho da coluna 2
        tabelapaciente.getColumnModel().getColumn(2).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(3).setPreferredWidth(90);  //dimensiona tamanho da coluna 3
        tabelapaciente.getColumnModel().getColumn(3).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(4).setPreferredWidth(90);  //dimensiona tamanho da coluna 3
        tabelapaciente.getColumnModel().getColumn(4).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(5).setPreferredWidth(90);  //dimensiona tamanho da coluna 3
        tabelapaciente.getColumnModel().getColumn(5).setResizable(false);//nao permite 
        

       
        tabelapaciente.getTableHeader().setReorderingAllowed(false);//nao permite reordenar a tabela
        tabelapaciente.setAutoResizeMode(tabelapaciente.AUTO_RESIZE_OFF);//nao permite redimensionar a tabela
        
        tabelapaciente.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//so permite que um nome seja selecionado 
             //fecha conexao   
        conexao.Desconecta();
    
    
    
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioAgenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_pesquisaagenda;
    private javax.swing.JButton cancelaratendimento;
    private javax.swing.JLabel data;
    private com.toedter.calendar.JDateChooser dataconsulta;
    private javax.swing.JButton finalizaragendamento;
    private javax.swing.JFormattedTextField formathora;
    private javax.swing.JLabel hora;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> medicos;
    private javax.swing.JTextArea motivo;
    private javax.swing.JTextField paciente;
    private javax.swing.JTextField status;
    private javax.swing.JTable tabelapaciente;
    // End of variables declaration//GEN-END:variables

}
