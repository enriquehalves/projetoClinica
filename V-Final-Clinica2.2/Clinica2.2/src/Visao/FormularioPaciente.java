/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Modelo.ModeloPaciente;
import Modelo.ModeloTabela;
import ModeloConexao.ConexaoBD;
import ModeloDAO.DAOPaciente;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Henrique
 */
public class FormularioPaciente extends javax.swing.JFrame {

    
    ConexaoBD conexao = new ConexaoBD();
    ModeloPaciente paciente = new ModeloPaciente();
    DAOPaciente daopaciente = new DAOPaciente();
    int flag = 0;
    int resposta=0;
    /**
     * Creates new form FormularioPaciente
     */
    public FormularioPaciente() {
        initComponents();
        PreencherBairro();
        preencherTabela("select codigo,rua,nome, telefone, cpf, bairronome from pacientes inner join bairro on pacientes.pacbairrocodigo=bairro.bairrocodigo order by nome ");
        
       // preencherTabela("select codigo,nome,telefone,cpf,rua,nome from pacientes inner join bairro on pacientes.bairrocodigo = bairro.codigo order by nome");
      salvarpaciente.setEnabled(false);
      excluirpaciente.setEnabled(false);
      editarpaciente.setEnabled(false);
      novopacinete.setEnabled(true);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ruapaciente = new javax.swing.JTextField();
        complementopaciente = new javax.swing.JTextField();
        ceppaciente = new javax.swing.JFormattedTextField();
        bairropaciente = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        nascimentopaciente = new javax.swing.JFormattedTextField();
        telefonepaciente = new javax.swing.JFormattedTextField();
        rgpaciente = new javax.swing.JFormattedTextField();
        nomepaciente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelapaciente = new javax.swing.JTable();
        novopacinete = new javax.swing.JButton();
        salvarpaciente = new javax.swing.JButton();
        editarpaciente = new javax.swing.JButton();
        excluirpaciente = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        btn_pesquisapaciente = new javax.swing.JButton();
        pesquisapaciente = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cpfpaciente = new javax.swing.JFormattedTextField();
        emailpaciente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        idpaciente = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pacientes");
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel1.setText("Nome");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 10, 50, 14);

        jLabel2.setText("Nascimento ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(420, 10, 70, 14);

        jLabel3.setText("RG");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 50, 50, 14);

        jLabel4.setText("Telefone");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(240, 50, 70, 14);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(null);

        jLabel6.setText("Rua");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(12, 13, 40, 14);

        jLabel7.setText("CEP");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(420, 10, 30, 14);

        jLabel8.setText("Complemento");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(10, 50, 80, 14);

        jLabel9.setText("Bairro");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(330, 50, 50, 14);

        ruapaciente.setEnabled(false);
        jPanel2.add(ruapaciente);
        ruapaciente.setBounds(40, 10, 340, 30);

        complementopaciente.setEnabled(false);
        jPanel2.add(complementopaciente);
        complementopaciente.setBounds(90, 50, 210, 30);

        try {
            ceppaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ceppaciente.setEnabled(false);
        jPanel2.add(ceppaciente);
        ceppaciente.setBounds(450, 10, 130, 30);

        bairropaciente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bairropaciente.setEnabled(false);
        jPanel2.add(bairropaciente);
        bairropaciente.setBounds(370, 50, 130, 20);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(20, 140, 590, 90);

        jLabel5.setText("Endere√ßo");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 120, 60, 14);

        try {
            nascimentopaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        nascimentopaciente.setEnabled(false);
        jPanel1.add(nascimentopaciente);
        nascimentopaciente.setBounds(490, 10, 120, 30);

        try {
            telefonepaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        telefonepaciente.setEnabled(false);
        jPanel1.add(telefonepaciente);
        telefonepaciente.setBounds(300, 50, 150, 30);

        try {
            rgpaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#.###.###.#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        rgpaciente.setEnabled(false);
        jPanel1.add(rgpaciente);
        rgpaciente.setBounds(60, 50, 170, 30);

        nomepaciente.setEnabled(false);
        jPanel1.add(nomepaciente);
        nomepaciente.setBounds(60, 10, 350, 30);

        tabelapaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelapaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelapacienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelapaciente);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 280, 590, 100);

        novopacinete.setText("Novo");
        novopacinete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novopacineteActionPerformed(evt);
            }
        });
        jPanel1.add(novopacinete);
        novopacinete.setBounds(20, 390, 90, 23);

        salvarpaciente.setText("Salvar");
        salvarpaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarpacienteActionPerformed(evt);
            }
        });
        jPanel1.add(salvarpaciente);
        salvarpaciente.setBounds(150, 390, 90, 23);

        editarpaciente.setText("Editar");
        editarpaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarpacienteActionPerformed(evt);
            }
        });
        jPanel1.add(editarpaciente);
        editarpaciente.setBounds(270, 390, 90, 23);

        excluirpaciente.setText("Excluir");
        excluirpaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirpacienteActionPerformed(evt);
            }
        });
        jPanel1.add(excluirpaciente);
        excluirpaciente.setBounds(400, 390, 90, 23);

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        jPanel1.add(cancelar);
        cancelar.setBounds(520, 390, 90, 23);

        btn_pesquisapaciente.setText("Pesquisar");
        btn_pesquisapaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pesquisapacienteActionPerformed(evt);
            }
        });
        jPanel1.add(btn_pesquisapaciente);
        btn_pesquisapaciente.setBounds(20, 240, 90, 30);
        jPanel1.add(pesquisapaciente);
        pesquisapaciente.setBounds(120, 240, 490, 30);

        jLabel10.setText("CPF");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(20, 90, 50, 14);

        try {
            cpfpaciente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cpfpaciente.setEnabled(false);
        cpfpaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfpacienteActionPerformed(evt);
            }
        });
        jPanel1.add(cpfpaciente);
        cpfpaciente.setBounds(60, 90, 170, 30);

        emailpaciente.setEnabled(false);
        jPanel1.add(emailpaciente);
        emailpaciente.setBounds(300, 90, 310, 30);

        jLabel11.setText("Email");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(260, 90, 60, 14);

        jLabel12.setText("ID");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(510, 50, 50, 14);

        idpaciente.setEnabled(false);
        jPanel1.add(idpaciente);
        idpaciente.setBounds(540, 50, 70, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(30, 30, 660, 420);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Formul√°rio de Pacientes");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(280, 10, 180, 14);

        setSize(new java.awt.Dimension(735, 518));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void salvarpacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarpacienteActionPerformed
      
             if(nomepaciente.getText().isEmpty()){
            //pede pra inserir nome
            JOptionPane.showMessageDialog(null, "preencher o nome para continuar");
            //deixa o cursor piscando no campo nome
            nomepaciente.requestFocus();
          //se crm vazio
        }else if(rgpaciente.getText().isEmpty()||rgpaciente.getText().equals("0.000.000.0")||
                    rgpaciente.getText().equals("1.111.111.1")||
                    rgpaciente.getText().equals("2.222.222.2")||
                    rgpaciente.getText().equals("3.333.333.3")||
                    rgpaciente.getText().equals("4.444.444.4")||
                    rgpaciente.getText().equals("5.555.555.5")||
                    rgpaciente.getText().equals("6.666.666.6")||
                    rgpaciente.getText().equals("7.777.777.7")||
                    rgpaciente.getText().equals("8.888.888.8")||
                    rgpaciente.getText().equals("9.999.999.9")||
                    rgpaciente.getText().equals(" .   .   . ")){
            if(rgpaciente.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "preencha o rg");
            }
            else{
                JOptionPane.showMessageDialog(null, "rg invalido");
            }
            //preencher crm
            //JOptionPane.showMessageDialog(null, "preencher o RG para continuar");
            //deixa cursor piscando
            rgpaciente.requestFocus();
        }else if(cpfpaciente.getText().isEmpty()||cpfpaciente.getText().equals("000.000.000.00")||
                    cpfpaciente.getText().equals("111.111.111.11")||
                    cpfpaciente.getText().equals("222.222.222.22")||
                    cpfpaciente.getText().equals("333.333.333.33")||
                    cpfpaciente.getText().equals("444.444.444.44")||
                    cpfpaciente.getText().equals("555.555.555.55")||
                    cpfpaciente.getText().equals("666.666.666.66")||
                    cpfpaciente.getText().equals("777.777.777.77")||
                    cpfpaciente.getText().equals("888.888.888.88")||
                    cpfpaciente.getText().equals("999.999.999.99")||
                    cpfpaciente.getText().equals("   .   .   .  ")){
           
              if(cpfpaciente.getText().isEmpty()){
                  JOptionPane.showMessageDialog(null, "cpf nao pode ficar em branco");
              }
              else{
                  JOptionPane.showMessageDialog(null, "cpf invalido");
              }
            cpfpaciente.requestFocus();
        }  
     
    
            
        
        else if(nascimentopaciente.getText().isEmpty()){
            //preencher crm
            JOptionPane.showMessageDialog(null, "preencher o nascimento para continuar");
            //deixa cursor piscando
            nascimentopaciente.requestFocus();
            
        }
       
        else if(ruapaciente.getText().isEmpty()){
            //preencher crm
            JOptionPane.showMessageDialog(null, "preencher o rua para continuar");
            //deixa cursor piscando
            ruapaciente.requestFocus();
        }
        else
             if(flag == 1){

                    paciente.setNome(nomepaciente.getText());
                    paciente.setNascimento(nascimentopaciente.getText());
                    paciente.setRg(rgpaciente.getText());
                    paciente.setCpf(cpfpaciente.getText());
                    paciente.setTelefone(telefonepaciente.getText());
                    paciente.setRua(ruapaciente.getText());
                    paciente.setCep(ceppaciente.getText());
                    paciente.setComplemento(complementopaciente.getText());
                    paciente.setBairro(String.valueOf(bairropaciente.getSelectedItem()));
                    paciente.setEmail(emailpaciente.getText());
                    daopaciente.Salvar(paciente);
                    nomepaciente.setText("");
                    cpfpaciente.setText("");
                    rgpaciente.setText("");
                    ruapaciente.setText("");
                    idpaciente.setText("");
                    ceppaciente.setText("");
                    complementopaciente.setText("");
                    ruapaciente.setText("");
                    nascimentopaciente.setText("");
                    emailpaciente.setText("");
                    telefonepaciente.setText("");
                    salvarpaciente.setEnabled(!true);
                    nomepaciente.setEnabled(!true);
                    cpfpaciente.setEnabled(!true);
                    rgpaciente.setEnabled(!true);
                    ruapaciente.setEnabled(!true);
                    bairropaciente.setEnabled(!true);
                    ceppaciente.setEnabled(!true);
                    complementopaciente.setEnabled(!true);
                    ruapaciente.setEnabled(!true);
                    nascimentopaciente.setEnabled(!true);
                    emailpaciente.setEnabled(!true);
                    telefonepaciente.setEnabled(!true);
                    novopacinete.setEnabled(true);
            preencherTabela("select codigo,rua,nome, telefone, cpf, bairronome from pacientes inner join bairro on pacientes.pacbairrocodigo=bairro.bairrocodigo order by nome ");
        
            
             }else{
                    paciente.setNome(nomepaciente.getText());
                    paciente.setNascimento(nascimentopaciente.getText());
                    paciente.setRg(rgpaciente.getText());
                    paciente.setCpf(cpfpaciente.getText());
                    paciente.setTelefone(telefonepaciente.getText());
                    paciente.setRua(ruapaciente.getText());
                    paciente.setCep(ceppaciente.getText());
                    paciente.setComplemento(complementopaciente.getText());
                    paciente.setBairro(String.valueOf(bairropaciente.getSelectedItem()));
                    paciente.setEmail(emailpaciente.getText());
                    paciente.setCodigo(Integer.parseInt(idpaciente.getText()));
                    daopaciente.Editar(paciente);
                    nomepaciente.setText("");
                    cpfpaciente.setText("");
                    rgpaciente.setText("");
                    ruapaciente.setText("");
                    idpaciente.setText("");
                    ceppaciente.setText("");
                    complementopaciente.setText("");
                    ruapaciente.setText("");
                    nascimentopaciente.setText("");
                    emailpaciente.setText("");
                    telefonepaciente.setText("");
                    salvarpaciente.setEnabled(!true);
                    nomepaciente.setEnabled(!true);
                    cpfpaciente.setEnabled(!true);
                    rgpaciente.setEnabled(!true);
                    ruapaciente.setEnabled(!true);
                    bairropaciente.setEnabled(!true);
                    ceppaciente.setEnabled(!true);
                    complementopaciente.setEnabled(!true);
                    ruapaciente.setEnabled(!true);
                    nascimentopaciente.setEnabled(!true);
                    emailpaciente.setEnabled(!true);
                    telefonepaciente.setEnabled(!true);
                    novopacinete.setEnabled(true);
                    preencherTabela("select codigo,rua,nome, telefone, cpf, bairronome from pacientes inner join bairro on pacientes.pacbairrocodigo=bairro.bairrocodigo order by nome ");
         
                 
             }
                 
        
    }//GEN-LAST:event_salvarpacienteActionPerformed

    private void novopacineteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novopacineteActionPerformed
       flag = 1;
       salvarpaciente.setEnabled(true);
       nomepaciente.setEnabled(true);
       cpfpaciente.setEnabled(true);
       rgpaciente.setEnabled(true);
       ruapaciente.setEnabled(true);
       bairropaciente.setEnabled(true);
       ceppaciente.setEnabled(true);
       complementopaciente.setEnabled(true);
       ruapaciente.setEnabled(true);
       nascimentopaciente.setEnabled(true);
       emailpaciente.setEnabled(true);
       telefonepaciente.setEnabled(true);
       nomepaciente.setText("");
       cpfpaciente.setText("");
       rgpaciente.setText("");
       ruapaciente.setText("");
       idpaciente.setText("");
       ceppaciente.setText("");
       complementopaciente.setText("");
       ruapaciente.setText("");
       nascimentopaciente.setText("");
       emailpaciente.setText("");
       telefonepaciente.setText("");
    }//GEN-LAST:event_novopacineteActionPerformed

    private void editarpacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarpacienteActionPerformed
       flag = 2;
       nomepaciente.setEnabled(true);
       cpfpaciente.setEnabled(true);
       rgpaciente.setEnabled(true);
       ruapaciente.setEnabled(true);
       bairropaciente.setEnabled(true);
       ceppaciente.setEnabled(true);
       complementopaciente.setEnabled(true);
       ruapaciente.setEnabled(true);
       nascimentopaciente.setEnabled(true);
       emailpaciente.setEnabled(true);
       telefonepaciente.setEnabled(true);
       salvarpaciente.setEnabled(true);
       novopacinete.setEnabled(false);
        
       
    }//GEN-LAST:event_editarpacienteActionPerformed

    private void btn_pesquisapacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pesquisapacienteActionPerformed
       
        paciente.setPesquisa(pesquisapaciente.getText());
        ModeloPaciente paciente1 = daopaciente.buscaPaciente(paciente);
        nomepaciente.setText(paciente1.getNome());
        idpaciente.setText(String.valueOf(paciente1.getCodigo()));
        nascimentopaciente.setText(paciente1.getNascimento());
        rgpaciente.setText(paciente1.getRg());
        cpfpaciente.setText(paciente1.getCpf());
        ruapaciente.setText(paciente1.getRua());
        telefonepaciente.setText(paciente1.getTelefone());
        emailpaciente.setText(paciente1.getEmail());
        complementopaciente.setText(paciente1.getComplemento());
        bairropaciente.setSelectedItem(paciente1.getBairro());
        ceppaciente.setText(paciente1.getCep());
        
        
    }//GEN-LAST:event_btn_pesquisapacienteActionPerformed

    private void excluirpacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirpacienteActionPerformed
        
        resposta=JOptionPane.showConfirmDialog(null, "deseja realmente excluir??");
        if(resposta==JOptionPane.YES_OPTION){
            paciente.setCodigo(Integer.parseInt(idpaciente.getText()));
            daopaciente.Excluir(paciente);
            nomepaciente.setText("");
            cpfpaciente.setText("");
            rgpaciente.setText("");
            ruapaciente.setText("");
            idpaciente.setText("");
            ceppaciente.setText("");
            complementopaciente.setText("");
            ruapaciente.setText("");
            nascimentopaciente.setText("");
            emailpaciente.setText("");
            telefonepaciente.setText("");
          preencherTabela("select codigo,rua,nome, telefone, cpf, bairronome from pacientes inner join bairro on pacientes.pacbairrocodigo=bairro.bairrocodigo order by nome ");
 
        }
      
        
    }//GEN-LAST:event_excluirpacienteActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
          editarpaciente.setEnabled(false);
          excluirpaciente.setEnabled(false);
          salvarpaciente.setEnabled(!true);
          nomepaciente.setEnabled(!true);
          cpfpaciente.setEnabled(!true);
          rgpaciente.setEnabled(!true);
          ruapaciente.setEnabled(!true);
          bairropaciente.setEnabled(!true);
          ceppaciente.setEnabled(!true);
          complementopaciente.setEnabled(!true);
          ruapaciente.setEnabled(!true);
          nascimentopaciente.setEnabled(!true);
          emailpaciente.setEnabled(!true);
          telefonepaciente.setEnabled(!true);
          novopacinete.setEnabled(true);
          
          nomepaciente.setText("");
          cpfpaciente.setText("");
          rgpaciente.setText("");
          ruapaciente.setText("");
          idpaciente.setText("");
          ceppaciente.setText("");
          complementopaciente.setText("");
          ruapaciente.setText("");
          nascimentopaciente.setText("");
          emailpaciente.setText("");
          telefonepaciente.setText("");
    }//GEN-LAST:event_cancelarActionPerformed

    private void tabelapacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelapacienteMouseClicked
      
            String nome_pac = ""+tabelapaciente.getValueAt(tabelapaciente.getSelectedRow(),1);//
      
        //abre conexao
      conexao.Conexao();
      //executa select com o nome selecionado na tabela
      conexao.ExecutaSql("select *from pacientes inner join bairro on pacientes.pacbairrocodigo = bairro.bairrocodigo where nome='"+nome_pac+"'");
      try{
          //filtra o primeiro resultado
      conexao.rs.first();
      //seta no campo idmedico o valor do atributo codigo no banco de dados
      idpaciente.setText(String.valueOf(conexao.rs.getInt("codigo")));
      //seta no campo nome valor do atributo nome no banco de dados
      nomepaciente.setText(conexao.rs.getString("nome"));
      //seta especialidade do atributo especialidade do banco de dados
      bairropaciente.setSelectedItem(conexao.rs.getString("bairronome"));
      //seta crm transformando em string o inteiro do atributo crm no banco de dados
      cpfpaciente.setText(String.valueOf(conexao.rs.getString("cpf")));
      rgpaciente.setText(conexao.rs.getString("rg"));
      emailpaciente.setText(conexao.rs.getString("email"));
      telefonepaciente.setText(conexao.rs.getString("telefone"));
      ruapaciente.setText(conexao.rs.getString("rua"));
      ceppaciente.setText(conexao.rs.getString("cep"));
      complementopaciente.setText(conexao.rs.getString("complemento"));
      nascimentopaciente.setText(conexao.rs.getString("nascimento"));
      }catch(Exception e){
          //mostra mensafem se algo nao funcionou
          JOptionPane.showMessageDialog(null, "erro no evento mouseclicked");
      }
      //desconecta
      conexao.Desconecta();
      editarpaciente.setEnabled(true);//habilita bota
      excluirpaciente.setEnabled(true);//habilita botao
    }//GEN-LAST:event_tabelapacienteMouseClicked

    private void cpfpacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfpacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfpacienteActionPerformed

    
    public void PreencherBairro(){
     
        conexao.Conexao();
        try {
             conexao.ExecutaSql("select *from bairro order by bairronome");
             conexao.rs.first();
             bairropaciente.removeAllItems();
             do{
                 bairropaciente.addItem(conexao.rs.getString("bairronome"));
             }while(conexao.rs.next());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
         conexao.Desconecta();
    }
    
    public void preencherTabela(String Sql){
        
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID","Nome","Telefone","CPF","Rua","Bairro"};//titulos das coluna da tabela
        //abre conexao
        conexao.Conexao();
        //executa busca no banco
        conexao.ExecutaSql(Sql);
        
        try{
            //filtra primeiro resultado
            conexao.rs.first();
            do{
                //insere no arraylist o que esta no atributo codigo nome ... no banco de dados
                dados.add(new Object[]{conexao.rs.getInt("codigo"),conexao.rs.getString("nome"),conexao.rs.getString("telefone"),conexao.rs.getString("cpf"),conexao.rs.getString("rua"),conexao.rs.getString("bairronome")});
               //enquanto tiver registro na tabela do banco
            }while(conexao.rs.next());
        }catch(Exception e){
            //se algo deu errdo
            JOptionPane.showMessageDialog(null, "busque novamente "+e);
        }
        //instancia tablea com os dados e coluna como parametro
        ModeloTabela modelotabela = new ModeloTabela(dados, colunas);
        //seta o modelo tabela
        tabelapaciente.setModel(modelotabela);
        
        //dimensiona tamanho da coluna 0
        tabelapaciente.getColumnModel().getColumn(0).setPreferredWidth(80);
        tabelapaciente.getColumnModel().getColumn(0).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(1).setPreferredWidth(150);  //dimensiona tamanho da coluna 1
        tabelapaciente.getColumnModel().getColumn(1).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(2).setPreferredWidth(90);  //dimensiona tamanho da coluna 2
        tabelapaciente.getColumnModel().getColumn(2).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(3).setPreferredWidth(90);  //dimensiona tamanho da coluna 3
        tabelapaciente.getColumnModel().getColumn(3).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(4).setPreferredWidth(90);  //dimensiona tamanho da coluna 3
        tabelapaciente.getColumnModel().getColumn(4).setResizable(false);//nao permite redimensionamento
        
        tabelapaciente.getColumnModel().getColumn(5).setPreferredWidth(90);  //dimensiona tamanho da coluna 3
        tabelapaciente.getColumnModel().getColumn(5).setResizable(false);//nao permite 
        

       
        tabelapaciente.getTableHeader().setReorderingAllowed(false);//nao permite reordenar a tabela
        tabelapaciente.setAutoResizeMode(tabelapaciente.AUTO_RESIZE_OFF);//nao permite redimensionar a tabela
        
        tabelapaciente.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//so permite que um nome seja selecionado 
             //fecha conexao   
        conexao.Desconecta();
    
    
    
    
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bairropaciente;
    private javax.swing.JButton btn_pesquisapaciente;
    private javax.swing.JButton cancelar;
    private javax.swing.JFormattedTextField ceppaciente;
    private javax.swing.JTextField complementopaciente;
    private javax.swing.JFormattedTextField cpfpaciente;
    private javax.swing.JButton editarpaciente;
    private javax.swing.JTextField emailpaciente;
    private javax.swing.JButton excluirpaciente;
    private javax.swing.JTextField idpaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField nascimentopaciente;
    private javax.swing.JTextField nomepaciente;
    private javax.swing.JButton novopacinete;
    private javax.swing.JTextField pesquisapaciente;
    private javax.swing.JFormattedTextField rgpaciente;
    private javax.swing.JTextField ruapaciente;
    private javax.swing.JButton salvarpaciente;
    private javax.swing.JTable tabelapaciente;
    private javax.swing.JFormattedTextField telefonepaciente;
    // End of variables declaration//GEN-END:variables
}
