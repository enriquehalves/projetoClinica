/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import ModeloConexao.ConexaoBD;
import Modelo.ModeloMedico;
import Modelo.ModeloTabela;
import ModeloDAO.DAOMedico;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Henrique
 */
public class FormularioMedico extends javax.swing.JFrame {

    ModeloMedico mod = new ModeloMedico(); //instancia modelo medico
    ConexaoBD conex = new ConexaoBD();//instancia conexaoBD
    DAOMedico control = new DAOMedico();//instancia daomedico
    int flag = 0;
    /**
     * Creates new form FormularioMedico
     */
    public FormularioMedico() {
        initComponents();
        preencherTabela("select *from medicos order by nomemed");//metodo preenche tabela ordenada por nome
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        especialidademedico = new javax.swing.JComboBox<>();
        nomemedico = new javax.swing.JTextField();
        crmmedico = new javax.swing.JFormattedTextField();
        btn_novomedico = new javax.swing.JButton();
        btn_salvarmedico = new javax.swing.JButton();
        btn_editarmedico = new javax.swing.JButton();
        btn_excluirmedico = new javax.swing.JButton();
        btn_cancelarmedico = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelamedico = new javax.swing.JTable();
        pesquisarmedico = new javax.swing.JTextField();
        btn_pesquisarmedico = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        idmedico = new javax.swing.JTextField();
        btn_voltarmedicos = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulario Medicos");
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel1.setText("Nome");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(170, 40, 50, 20);

        jLabel2.setText("CRM");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(170, 90, 40, 14);

        jLabel3.setText("Especialidade");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(470, 50, 70, 14);

        especialidademedico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cardioligia", "Dermatologia", "Oculista", "Psiquiatra" }));
        especialidademedico.setEnabled(false);
        jPanel1.add(especialidademedico);
        especialidademedico.setBounds(540, 50, 130, 20);

        nomemedico.setEnabled(false);
        jPanel1.add(nomemedico);
        nomemedico.setBounds(210, 50, 250, 30);

        try {
            crmmedico.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        crmmedico.setEnabled(false);
        crmmedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crmmedicoActionPerformed(evt);
            }
        });
        jPanel1.add(crmmedico);
        crmmedico.setBounds(210, 90, 140, 30);

        btn_novomedico.setText("Novo");
        btn_novomedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_novomedicoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_novomedico);
        btn_novomedico.setBounds(20, 30, 90, 23);

        btn_salvarmedico.setText("Salvar");
        btn_salvarmedico.setEnabled(false);
        btn_salvarmedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarmedicoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_salvarmedico);
        btn_salvarmedico.setBounds(20, 60, 90, 23);

        btn_editarmedico.setText("Editar");
        btn_editarmedico.setEnabled(false);
        btn_editarmedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarmedicoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_editarmedico);
        btn_editarmedico.setBounds(20, 90, 90, 23);

        btn_excluirmedico.setText("Excluir");
        btn_excluirmedico.setEnabled(false);
        btn_excluirmedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirmedicoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_excluirmedico);
        btn_excluirmedico.setBounds(20, 120, 90, 23);

        btn_cancelarmedico.setText("Cancelar");
        btn_cancelarmedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarmedicoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cancelarmedico);
        btn_cancelarmedico.setBounds(20, 180, 90, 23);

        tabelamedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelamedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelamedicoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelamedico);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(160, 200, 452, 140);
        jPanel1.add(pesquisarmedico);
        pesquisarmedico.setBounds(259, 160, 350, 30);

        btn_pesquisarmedico.setText("Pesquisar");
        btn_pesquisarmedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pesquisarmedicoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_pesquisarmedico);
        btn_pesquisarmedico.setBounds(160, 160, 90, 30);

        jLabel4.setText("ID");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(170, 10, 30, 14);

        idmedico.setEnabled(false);
        jPanel1.add(idmedico);
        idmedico.setBounds(210, 10, 80, 30);

        btn_voltarmedicos.setText("Voltar");
        btn_voltarmedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltarmedicosActionPerformed(evt);
            }
        });
        jPanel1.add(btn_voltarmedicos);
        btn_voltarmedicos.setBounds(23, 260, 90, 23);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 30, 690, 370);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Cadastro de MÃ©dicos");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(290, 10, 190, 14);

        setSize(new java.awt.Dimension(728, 461));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salvarmedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarmedicoActionPerformed
       //se campo nome estiver vazio
        if(nomemedico.getText().isEmpty()){
            //pede pra inserir nome
            JOptionPane.showMessageDialog(null, "preencher o nome para continuar");
            //deixa o cursor piscando no campo nome
            nomemedico.requestFocus();
          //se crm vazio
        }else if(crmmedico.getText().isEmpty()||crmmedico.getText().equals("00000")||
                                                crmmedico.getText().equals("11111")||
                                                crmmedico.getText().equals("22222")||
                                                crmmedico.getText().equals("33333")||
                                                crmmedico.getText().equals("44444")||
                                                crmmedico.getText().equals("55555")||
                                                crmmedico.getText().equals("66666")||
                                                crmmedico.getText().equals("77777")||
                                                crmmedico.getText().equals("88888")||
                                                crmmedico.getText().equals("99999")||
                                                crmmedico.getText().equals("")){
            if(crmmedico.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "preencher o CRM para continuar");
             crmmedico.requestFocus();
            }
            else{
                JOptionPane.showMessageDialog(null, "crm invalido");
            crmmedico.requestFocus();
            }
        }else
        //se flag == 1
        if(flag == 1){
            //seta na classe medico o que estiver escrito no campo nome do medico no frame
        mod.setNome(nomemedico.getText());
        //seta na classe medico o que esta selecionado na caixa de compinacao
        mod.setEspecialidade(String.valueOf(especialidademedico.getSelectedItem()));
        //seta na classe medico o que esta escrito no crm 
        mod.setCrm(Integer.parseInt(crmmedico.getText()));
        //metodo salvar 
        control.Salvar(mod);
        nomemedico.setText("");//limpa o campo
        crmmedico.setText("");  //limpa o campo
        idmedico.setText(""); // limpa o campo
        nomemedico.setEnabled(false);//desabilita o campo nome do medico 
        crmmedico.setEnabled(false);//desbilita crm
        especialidademedico.setEnabled(false);//desabilita especialidade
        btn_salvarmedico.setEnabled(false);//desbilita botao salvar
         preencherTabela("select *from medicos order by nomemed");//atualiza a tabela
       }else{//se flag nao igual 1
            //seta codigo na classe medico
           mod.setCodigo(Integer.parseInt(idmedico.getText()));
           //seta nome na classe medico
           mod.setNome(nomemedico.getText());
           //seta especialidade selecionada
           mod.setEspecialidade(String.valueOf(especialidademedico.getSelectedItem()));
           //seta crm na classe 
           mod.setCrm(Integer.parseInt(crmmedico.getText()));
           //metodo editar
           control.Editar(mod);
           
        nomemedico.setEnabled(false);//desbilita nome
        crmmedico.setEnabled(false);//desbilita crm
        especialidademedico.setEnabled(false);//desbilita especialidade
        btn_salvarmedico.setEnabled(false);//desbilita botao salvar
        
        crmmedico.setText("");//limoa o campo
        nomemedico.setText("");//limpa o campo
        idmedico.setText("");//limpa o campo
         preencherTabela("select *from medicos order by nomemed");//atualiza tabela
       }
    }//GEN-LAST:event_btn_salvarmedicoActionPerformed

    private void btn_novomedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_novomedicoActionPerformed
       flag = 1;//se clicar no bata novo flag receb 1
        nomemedico.setEnabled(true);//habilita campo nome
       especialidademedico.setEnabled(true);//habilita caixa de selcao
       crmmedico.setEnabled(true);//habilita crm
       btn_salvarmedico.setEnabled(true);//habilita botao salvar
       btn_cancelarmedico.setEnabled(true);//habilita botao cancelar
       btn_editarmedico.setEnabled(false);
       
       
       nomemedico.setText("");//limpa o campo
       crmmedico.setText("");//limpa o campo
       pesquisarmedico.setText("");//limpa o campo
       idmedico.setText("");//limpa o campo
       
       
    }//GEN-LAST:event_btn_novomedicoActionPerformed

    private void btn_pesquisarmedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pesquisarmedicoActionPerformed
       
        mod.setPesquisa(pesquisarmedico.getText());//seta na classe medico o que eta escrito no campo pesquisa 
        ModeloMedico model = control.buscaMedico(mod);//modelo medico recebe metodo busca medico
        nomemedico.setText(model.getNome());//campo nome seta o que esta na variavel nome da classe modelo
        crmmedico.setText(String.valueOf(model.getCrm()));//seta crm tranformando em string o inteiro que esta no crm da classe modelo
        idmedico.setText(String.valueOf(model.getCodigo()));//seta codigo que esta na classe codigo
        especialidademedico.setSelectedItem(model.getEspecialidade());//seta especialidade que esta na classe modelo
        btn_editarmedico.setEnabled(!true);//desabilita botao editar
        btn_excluirmedico.setEnabled(!true);//desabilita bota excluir
        
        preencherTabela("select *from medicos where nomemed like'%"+mod.getPesquisa()+"%'");
        
    }//GEN-LAST:event_btn_pesquisarmedicoActionPerformed

    private void btn_cancelarmedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarmedicoActionPerformed
       
       nomemedico.setEnabled(!true);//desbilita 
       especialidademedico.setEnabled(!true);//desbilita
       crmmedico.setEnabled(!true);//desabilita
       btn_salvarmedico.setEnabled(!true);//desabilita
       btn_cancelarmedico.setEnabled(!true);//desabilita
       btn_novomedico.setEnabled(true);//desbilita
       
       crmmedico.setText("");//limpa
       nomemedico.setText("");//limpa
       pesquisarmedico.setText("");//limpa
       idmedico.setText("");//limpa
       
    }//GEN-LAST:event_btn_cancelarmedicoActionPerformed

    private void btn_editarmedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarmedicoActionPerformed
       flag = 2;//se clicar no bota editar flag recebe 2
       nomemedico.setEnabled(true);//habilita
       especialidademedico.setEnabled(true);//habilita
       crmmedico.setEnabled(true);//habilita
       btn_salvarmedico.setEnabled(true);//habilita
       btn_cancelarmedico.setEnabled(true);//habilita
       btn_editarmedico.setEnabled(false);//desbilita
       btn_novomedico.setEnabled(false);//desabilita
       btn_excluirmedico.setEnabled(!false);//desabilita
    }//GEN-LAST:event_btn_editarmedicoActionPerformed

    private void btn_excluirmedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirmedicoActionPerformed
      
        int resposta = 0;//resposta
        resposta = JOptionPane.showConfirmDialog(null, "deseja realmente excluir?");//se resposta for sim
        if(resposta == JOptionPane.YES_OPTION ){
            mod.setCodigo(Integer.parseInt(idmedico.getText()));//seta codigo na classe modelomedico
            control.Excluir(mod);//metodo excluir medico
            
            crmmedico.setText("");//limpa 
            nomemedico.setText("");//limpa
            especialidademedico.setEnabled(false);//desbilita
            idmedico.setText("");//limpa
             preencherTabela("select *from medicos order by nomemed");//atualiza tabela
        }
        
    }//GEN-LAST:event_btn_excluirmedicoActionPerformed

    private void tabelamedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelamedicoMouseClicked
      //quando clica em um nome da tabela 
        String nome_medico = ""+tabelamedico.getValueAt(tabelamedico.getSelectedRow(),1);//
      
        //abre conexao
      conex.Conexao();
      //executa select com o nome selecionado na tabela
      conex.ExecutaSql("select *from medicos where nomemed='"+nome_medico+"'");
      try{
          //filtra o primeiro resultado
      conex.rs.first();
      //seta no campo idmedico o valor do atributo codigo no banco de dados
      idmedico.setText(String.valueOf(conex.rs.getInt("codigo")));
      //seta no campo nome valor do atributo nome no banco de dados
      nomemedico.setText(conex.rs.getString("nomemed"));
      //seta especialidade do atributo especialidade do banco de dados
      especialidademedico.setSelectedItem(conex.rs.getString("especialidade"));
      //seta crm transformando em string o inteiro do atributo crm no banco de dados
      crmmedico.setText(String.valueOf(conex.rs.getInt("crm")));
      }catch(Exception e){
          //mostra mensafem se algo nao funcionou
          JOptionPane.showMessageDialog(null, "erro no evento mouseclicked");
      }
      //desconecta
      conex.Desconecta();
      btn_editarmedico.setEnabled(true);//habilita bota
      btn_excluirmedico.setEnabled(true);//habilita botao
    }//GEN-LAST:event_tabelamedicoMouseClicked

    private void btn_voltarmedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltarmedicosActionPerformed
        //fecha a pagina atual  
        dispose();
       
    }//GEN-LAST:event_btn_voltarmedicosActionPerformed

    private void crmmedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crmmedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_crmmedicoActionPerformed

    //metodo preesnche tabela
    public void preencherTabela(String Sql){
        
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID","Nome","Especialidade","CRM"};//titulos das coluna da tabela
        //abre conexao
        conex.Conexao();
        //executa busca no banco
        conex.ExecutaSql(Sql);
        
        try{
            //filtra primeiro resultado
            conex.rs.first();
            do{
                //insere no arraylist o que esta no atributo codigo nome ... no banco de dados
                dados.add(new Object[]{conex.rs.getInt("codigo"),conex.rs.getString("nomemed"),conex.rs.getString("especialidade"),conex.rs.getInt("crm")});
               //enquanto tiver registro na tabela do banco
            }while(conex.rs.next());
        }catch(Exception e){
            //se algo deu errdo
            JOptionPane.showMessageDialog(null, "busque novamente");
        }
        //instancia tablea com os dados e coluna como parametro
        ModeloTabela modelotabela = new ModeloTabela(dados, colunas);
        //seta o modelo tabela
        tabelamedico.setModel(modelotabela);
        
        //dimensiona tamanho da coluna 0
        tabelamedico.getColumnModel().getColumn(0).setPreferredWidth(80);
        tabelamedico.getColumnModel().getColumn(0).setResizable(false);//nao permite redimensionamento
        
        tabelamedico.getColumnModel().getColumn(1).setPreferredWidth(196);  //dimensiona tamanho da coluna 1
        tabelamedico.getColumnModel().getColumn(1).setResizable(false);//nao permite redimensionamento
        
        tabelamedico.getColumnModel().getColumn(2).setPreferredWidth(90);  //dimensiona tamanho da coluna 2
        tabelamedico.getColumnModel().getColumn(2).setResizable(false);//nao permite redimensionamento
        
        tabelamedico.getColumnModel().getColumn(3).setPreferredWidth(80);  //dimensiona tamanho da coluna 3
        tabelamedico.getColumnModel().getColumn(3).setResizable(false);//nao permite redimensionamento
       
        tabelamedico.getTableHeader().setReorderingAllowed(false);//nao permite reordenar a tabela
        tabelamedico.setAutoResizeMode(tabelamedico.AUTO_RESIZE_OFF);//nao permite redimensionar a tabela
        
        tabelamedico.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//so permite que um nome seja selecionado 
             //fecha conexao   
        conex.Desconecta();
    
    
    
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelarmedico;
    private javax.swing.JButton btn_editarmedico;
    private javax.swing.JButton btn_excluirmedico;
    private javax.swing.JButton btn_novomedico;
    private javax.swing.JButton btn_pesquisarmedico;
    private javax.swing.JButton btn_salvarmedico;
    private javax.swing.JButton btn_voltarmedicos;
    private javax.swing.JFormattedTextField crmmedico;
    private javax.swing.JComboBox<String> especialidademedico;
    private javax.swing.JTextField idmedico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomemedico;
    private javax.swing.JTextField pesquisarmedico;
    private javax.swing.JTable tabelamedico;
    // End of variables declaration//GEN-END:variables
}
